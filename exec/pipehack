# This file is part of newrun, copyright Â© M. Kristall
#
# This program is free software. You can redistribute it and/or modify it under
# the terms of version 2 of the GNU General Public License (GPL) as published by
# the Free Software Foundation.
#
# This program is distributed WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GPL
# for more details.
#
# You should have received a copy of the GPL with this distribution. If not,
# see <http://www.gnu.org/licenses/>.

## Config variables
# PIPEPATH	name of the pipe file (something like .tremded_pipe?)
# EXECHACK	executor to use for communicating with the server

# Use this if you want to send commands using a fifo (pipe file)

if [[ "$EXEC" != "pipehack" ]]; then
	warn "$_NAME: COMM=pipehack is not valid"
	exit 125
fi

if [[ "$EXECHACK" != "" ]]; then
	include "$_EXECPATH/$EXECHACK"
fi

COMM=pipe

_pipehack_send () {
	if [[ "$EXECHACK" == "" ]]; then
		echo "$@"
	else
		"$EXECHACK"Cmd "$@"
	fi
}

_pipehack_quit () {
	rm "$PIPEPATH"
	if [[ "$EXECHACK" != "" ]]; then
		"$EXECHACK"Stop "$@"
	else
		_pipehack_send quit "$@"
		forcequit
	fi
	exit
}

_pipehack_start () {
	local x y msg
	pidfilehack
	trap _pipehack_quit SIGQUIT SIGKILL SIGTERM SIGCHLD
	while isrunning; do
		if [ ! -p "$PIPEPATH" ]; then
			mkfifo "$PIPEPATH"
		fi
		# wake up every 5 seconds
		while read -r -t 5 x < "$PIPEPATH"; do
			_pipehack_send "$x"
			y=($x)
			y[0]=$(echo ${y[0]} | tr [A-Z] [a-z])
			if [[ "${y[0]}" == "$QUIT" ]]; then
				msg="${x:${#QUIT}}"
				break 2
			fi
		done
	done
	_pipehack_quit "$msg"
}

pipehackStart () {
	if [[ "$EXECHACK" != "" ]] && tryrun "$EXECHACK"Start "$@" 2> /dev/null
	then
		_pipehack_start &> /dev/null &
		PID=$!
	else
		EXECHACK=
		# tremded tends to ignore piped input; script takes care of that
		_pipehack_start | \
			script -c "$(shellify "$SERVER" "$@")" /dev/null \
			&> /dev/null &
		PID=$(jobs -p 1)
	fi
	disown
	savepid
}

pipehackStartCmd () {
	if [[ "$EXECHACK" != "" ]]; then
		"$EXECHACK"StartCmd
	fi
}

pipehackStop () {
	echo "$QUIT" "$@" > "$PIPEPATH"
}
