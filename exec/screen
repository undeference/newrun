# This file is part of newrun, copyright Â© 2011 M. Kristall

## Config variables
# SESSION	session name to use for screen (-S)
# WINDOW	window name to use for screen (-p)

# for various scripts to communicate with the server
if [[ "$SESSION" == "" ]]; then
	echo "$_NAME: consider setting SESSION; will use 'server'" >&2
	SESSION="server"
fi
if [[ "$WINDOW" == "" ]]; then
	echo "$_NAME: WINDOW needs to be set for now" >&2
	exit 2
fi
if [[ "$WINDOW" =~ ^[0-9]+$ ]]; then
	echo "$_NAME: WINDOW is numeric so we might not get what we want" >&2
fi

sessionexists () {
	local list="$(screen -list)"
	if [[ "$list" =~ "$SESSION" ]]; then
		return 0
	else
		return 1
	fi
}

Cmd () {
	if ! sessionexists; then
		echo "$_NAME: no such session" >&2
		exit 3
	fi
	# if someone started typing something before we "stuff", our text gets
	# prepended onto theirs
	# either we exec their command prematurely or we try to overwrite it
	# prematurely execing a command could be dangerous
	local pre='\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b'
	local cmd="$(echo -ne "$pre")"
	cmd="$cmd$*$(echo -ne '\r')"
	screen -q -S "$SESSION" -p "$WINDOW" -X stuff "$cmd" &> /dev/null
}

Start () {
	# if there is no screen session with that name, create it
	if ! sessionexists; then
		if ! screen -q -S "$SESSION" -d -m &> /dev/null; then
			echo "$_NAME: could not create session '$SESSION'" >&2
			exit 3
		fi
	fi

	screen -q -S "$SESSION" -X screen -t "$WINDOW" \
		"$SERVER" \
		+set dedicated "$DEDICATED" \
		+set net_port "$PORT" +set net_port6 "$PORT" \
		+set fs_basepath "$BASEPATH" \
		+set fs_homepath "$HOMEPATH" \
		+set fs_game "$GAMENAME" \
		$* &> /dev/null

	# 1s should be sufficient for the server to start
	sleep 1
	pidfilehack
	if (( PID == 0 )); then
		echo "$_NAME: server may not be running" >&2
		exit 255
	fi
	if (( PID < 0 )); then
		echo "$_NAME: could not reliably determine server's pid" >&2
	else
		savepid
	fi
}

Stop () {
	if ! sessionexists; then
		echo "$_NAME: no such session" >&2
		exit 3
	fi
	Cmd quit $*
	forcequit
	removepid
}

Restart () {
	if ! sessionexists; then
		echo "$_NAME: no such session" >&2
		exit 3
	fi
	countdown 5 Restarting
	Stop Please reconnect in a few seconds
	Start $*
}
