# This file is part of newrun, copyright Â© 2011, 2012 M. Kristall

## Config variables
# SESSION	session name to use for screen (-S)
# WINDOW	window name to use for screen (-p)

# for various scripts to communicate with the server
if [[ "$SESSION" == "" ]]; then
	warn "$_NAME: consider setting SESSION; will use 'server'"
	SESSION="server"
fi
if [[ "$WINDOW" == "" ]]; then
	warn "$_NAME: WINDOW needs to be set for now"
	exit 2
fi
if [[ "$WINDOW" =~ ^[0-9]+$ ]]; then
	warn "$_NAME: WINDOW is numeric so we might not get what we want"
fi

_screen_sessionexists () {
	local list="$(screen -list)"
	if [[ "$list" =~ "No Sockets found in " ]]; then
		return 1
	fi
	if [[ "$list" =~ "$SESSION" ]]; then
		return 0
	fi
	return 1
}

screenCmd () {
	if ! _screen_sessionexists; then
		warn "$_NAME: no such session"
		exit 3
	fi
	# if someone started typing something before we "stuff", our text gets
	# prepended onto theirs
	# either we exec their command prematurely or we try to overwrite it
	# prematurely execing a command could be dangerous
	local x=$'\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b'
	local y="$(stringify "$@")"
	screen -q -S "$SESSION" -p "$WINDOW" -X stuff "$x$y"$'\r' #&> /dev/null
}

screenStart () {
	# if there is no screen session with that name, create it
	if ! _screen_sessionexists; then
		if ! screen -q -S "$SESSION" -d -m &> /dev/null; then
			warn "$_NAME: could not create session '$SESSION'"
			exit 3
		fi
		sleep 1
	fi

	screen -q -S "$SESSION" -X screen -t "$WINDOW" \
		"$SERVER" "$@" &> /dev/null

	# 2s should be sufficient for the server to start
	sleep 1
	pidfilehack
	if (( PID == 0 )); then
		warn "$_NAME: server may not be running"
		exit 255
	fi
	if (( PID < 0 )); then
		warn "$_NAME: could not reliably determine server's pid"
	else
		savepid
	fi
}

screenStop () {
	if ! _screen_sessionexists; then
		warn "$_NAME: no such session"
		exit 3
	fi
	Cmd $QUIT "$(stringify "$@")"
	screen -q -S "$SESSION" -p "$WINDOW" -X kill
	forcequit
	removepid
}
