# This file is part of newrun, copyright Â© 2011, 2012 M. Kristall

## Config variables
# CONFIG	path to the config containing the rconpassword for this server
# ADDRESS	address to use if 127.0.0.1 will not work

if [[ "$ADDRESS" == "" ]]; then
	ADDRESS="127.0.0.1"
fi

cfg=
_rcon_findcfg () {
	if [ -f "$HOMEPATH/$GAMENAME/$1" ]; then
		cfg="$HOMEPATH/$GAMENAME/$1"
	fi
}

if [[ "$CONFIG" == "" ]]; then
	_rcon_findcfg "autogen_server.cfg"
	if [[ "$cfg" == "" ]]; then
		_rcon_findcfg "autogen.cfg"
		if [[ "$cfg" == "" ]]; then
			warn "$_NAME: can't find a cfg file to use"
			exit 3
		fi
	fi
else
	_rcon_findcfg "$CONFIG"
	if [[ "$cfg" == "" ]]; then
		warn "$_NAME: CONFIG does not exist: '$CONFIG'"
		exit 3
	fi
fi

RCON="$(grep -i rconpassword "$cfg" | awk '{ print $3 }')"
if [[ "${RCON:0:1}" == '"' ]]; then
	RCON="${RCON:1:${#RCON} - 2}"
fi

if [[ "$RCON" == "" ]]; then
	warn "$_NAME: no rconpassword detected, things could be broken"
fi

rconCmd () {
	echo $'\xff\xff\xff\xffrcon '"\"$RCON\" $(stringify $@)" > \
		"/dev/udp/$ADDRESS/$PORT"
}

rconStartCmd () {
	if [[ "$RCON" == "" ]]; then
		RCON="$(uuidgen)"
		warn "$_NAME: setting rconpassword to $RCON"
		echo "seta rconPassword \"$RCON\"" >> "$cfg"
	fi
	push STARTCMD +set rconPassword "$RCON"
}

rconStop () {
	if isrunning; then
		Cmd quit "$(stringify "$@")"
		forcequit
	else
		warn "$_NAME: server is not running?"
		exit 255
	fi
	removepid
}
